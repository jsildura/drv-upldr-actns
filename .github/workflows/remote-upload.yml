name: Remote Upload to Drive

# Put correlation id in run name for easy lookup
run-name: >
  Remote upload ${{ github.event.client_payload.correlationId || inputs.correlationId }}

on:
  repository_dispatch:
    types: [remote_upload]  # extension triggers this
  workflow_dispatch:        # manual run for testing
    inputs:
      url:
        description: "Remote file URL"
        required: true
      filename:
        description: "Target filename"
        required: false
      correlationId:
        description: "Client-supplied correlation id"
        required: false

permissions:
  contents: read
  actions: read

env:
  GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
  GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}

jobs:
  upload:
    name: Upload ${{ github.event.client_payload.filename || inputs.filename || 'file' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Resolve inputs
        id: args
        run: |
          if [ "${{ github.event_name }}" = "repository_dispatch" ]; then
            echo "url=${{ github.event.client_payload.url }}" >> $GITHUB_OUTPUT
            echo "filename=${{ github.event.client_payload.filename }}" >> $GITHUB_OUTPUT
            echo "accountKey=${{ github.event.client_payload.accountKey }}" >> $GITHUB_OUTPUT
            echo "parentKey=${{ github.event.client_payload.parentKey }}" >> $GITHUB_OUTPUT
          else
            echo "url=${{ inputs.url }}" >> $GITHUB_OUTPUT
            echo "filename=${{ inputs.filename }}" >> $GITHUB_OUTPUT
            echo "accountKey=DRIVE_REFRESH_TOKEN_MAIN" >> $GITHUB_OUTPUT
            echo "parentKey=" >> $GITHUB_OUTPUT
          fi

      - name: Map account key to secret
        id: secrets
        run: |
          ACCOUNT_KEY="${{ steps.args.outputs.accountKey }}"
          echo "Account key requested: $ACCOUNT_KEY"
          
          # Map account key string to actual secret
          # Add more mappings here for additional accounts
          if [ "$ACCOUNT_KEY" = "DRIVE_REFRESH_TOKEN_MAIN" ]; then
            echo "refresh_token=${{ secrets.DRIVE_REFRESH_TOKEN_MAIN }}" >> $GITHUB_OUTPUT
            echo "parent_folder=${{ secrets.DRIVE_PARENT_FOLDER_MAIN }}" >> $GITHUB_OUTPUT
          # elif [ "$ACCOUNT_KEY" = "DRIVE_REFRESH_TOKEN_ACCOUNT2" ]; then
          #   echo "refresh_token=${{ secrets.DRIVE_REFRESH_TOKEN_ACCOUNT2 }}" >> $GITHUB_OUTPUT
          #   echo "parent_folder=${{ secrets.DRIVE_PARENT_FOLDER_ACCOUNT2 }}" >> $GITHUB_OUTPUT
          else
            echo "::error::Unknown account key: $ACCOUNT_KEY"
            exit 1
          fi

      - name: Run upload script
        env:
          # OAuth credentials
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          # Mapped refresh token and folder from previous step
          REFRESH_TOKEN: ${{ steps.secrets.outputs.refresh_token }}
          PARENT_FOLDER: ${{ steps.secrets.outputs.parent_folder }}
        run: |
          node scripts/upload.js \
            --url "${{ steps.args.outputs.url }}" \
            --filename "${{ steps.args.outputs.filename }}"

      - name: Upload result artifact
        uses: actions/upload-artifact@v4
        with:
          name: result
          path: out/result.json
          if-no-files-found: error
 
